#!/usr/bin/python
USAGE = 'usage: cmd database_dir name decl/def/ref [-f file_name] [-l line_no] [-c column_no]'

import sys
import sqlite3
import cxxtags_util
import getopt
import re
import os

def queryDecl(dbDir, name, fileName, lineNo, colNo):
    dbFileList = []
    if fileName == "":
        dbFileList = cxxtags_util.get_db_file_list(dbDir)
    else:
        dbFileList = cxxtags_util.get_db_by_file_name_match(dbDir, fileName)
    for fn in dbFileList:
        db = cxxtags_util.db_connect(fn)
        cur = db.cursor()
        q = 'SELECT decl.usr, decl.name, file_list.name, decl.line, decl.col FROM '+ cxxtags_util.QUERY_JOINED_TABLE_DECL + ' WHERE decl.name=?'
        argList = (name,)
        if fileName != "":
            q += ' AND file_list.name LIKE ?'
            argList += ('%'+fileName,)
        if lineNo != -1:
            q += ' AND decl.line=?'
            argList += (lineNo,)
        if colNo != -1:
            q += ' AND decl.col=?'
            argList += (colNo,)
        q += ';'
        cur.execute(q, argList)
        for row in cur.fetchall():
            resUsr, resName, resFileName, resLine, resCol = row
            #print row
            if fileName == "" or re.search(fileName + '$', resFileName):
                print "%s\n%s\n%d\n"%(resUsr, resFileName, resLine), cxxtags_util.get_line_from_file(resFileName, resLine)
        db.close()

def queryRef(dbDir, name, fileName, lineNo, colNo):
    dbFileList = cxxtags_util.get_db_file_list(dbDir)
    for fn in dbFileList:
        db = cxxtags_util.db_connect(fn)
        cur = db.cursor()
        q = 'SELECT ref.usr, ref.name, file_list.name, ref.line, ref.col FROM '+ cxxtags_util.QUERY_JOINED_TABLE_REF + ' WHERE ref.name=?'
        argList = (name,)
        if fileName != "":
            q += ' AND fileList.name LIKE ?'
            argList += ('%'+fileName,)
        if lineNo != -1:
            q += ' AND ref.line=?'
            argList += (lineNo,)
        if colNo != -1:
            q += ' AND ref.col=?'
            argList += (colNo,)
        q += ';'
        cur.execute(q, argList)
        #print fn
        for row in cur.fetchall():
            resUsr, resName, resFileName, resLine, resCol = row
            #print row
            if fileName == "" or re.search(fileName + '$', resFileName):
                print "%s\n%s\n%d\n"%(resUsr, resFileName, resLine), cxxtags_util.get_line_from_file(resFileName, resLine)
        db.close()

def main():
    global USAGE
    try:
        optlist, args = getopt.gnu_getopt(sys.argv[1:], 'f:l:c:')
    except getopt.GetoptError, e:
        print "ERROR: getopt: ", e.args[0]
        sys.exit(1)
    if len(args) != 3:
        print USAGE
        sys.exit(0)
    dbDir = args[0]
    name = args[1]
    queryType = args[2]
    if queryType != 'ref' and queryType != 'decl':
        print "ERROR: query type must be ref, decl or def"
        sys.exit(1)
    fileName = ""
    lineNo = -1
    colNo = -1
    for opt, val in optlist:
        if opt == "-f":
            fileName = val
        elif opt == "-l":
            lineNo = val
        elif opt == "-c":
            colNo = val

    if queryType == 'ref':
        queryRef(dbDir, name, fileName, lineNo, colNo)
    elif queryType == 'decl':
        queryDecl(dbDir, name, fileName, lineNo, colNo)
#######
main()
